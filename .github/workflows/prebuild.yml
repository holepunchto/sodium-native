name: Prebuild
on:
  workflow_dispatch:
jobs:
  prebuild:
    strategy:
      matrix:
        include:
        - os: ubuntu-22.04
          platform: linux
          arch: x64
        - os: ubuntu-22.04-arm
          platform: linux
          arch: arm64
        - os: ubuntu-22.04
          platform: android
          arch: x64
        - os: ubuntu-22.04
          platform: android
          arch: ia32
        - os: ubuntu-22.04
          platform: android
          arch: arm64
        - os: ubuntu-22.04
          platform: android
          arch: arm
        - os: ubuntu-22.04
          platform: linux
          arch: arm64
          tags: -musl
          flags: --environment musl
        - os: ubuntu-22.04
          platform: linux
          arch: x64
          tags: -musl
          flags: --environment musl
        - os: macos-14
          platform: darwin
          arch: x64
        - os: macos-14
          platform: darwin
          arch: arm64
        - os: macos-14
          platform: ios
          arch: arm64
        - os: macos-14
          platform: ios
          arch: arm64
          tags: -simulator
          flags: --simulator
        - os: macos-14
          platform: ios
          arch: x64
          tags: -simulator
          flags: --simulator
        - os: windows-2022
          platform: win32
          arch: x64
        - os: windows-2022
          platform: win32
          arch: arm64
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.tags }}
    env:
      MUSL_TOOLCHAIN_VERSION: v1.2.5
      MUSL_HOST_ARCH: x86_64
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - run: choco upgrade llvm
      if: ${{ matrix.platform == 'win32' }}
    - run: |
        case "${{ matrix.arch }}" in
          x64)
            TOOLCHAIN_ARCH="x86_64"
            ;;
          arm64)
            TOOLCHAIN_ARCH="aarch64"
            ;;
          *)
            echo "Error: Unsupported architecture '${{ matrix.arch }}' for musl cross compliation."
            exit 1
            ;;
        esac
        TOOLCHAIN_ARCHIVE_NAME="${{ env.MUSL_HOST_ARCH }}-linux-musl-cross-${TOOLCHAIN_ARCH}-linux"
        wget https://github.com/holepunchto/musl-toolchains/releases/download/${{ env.MUSL_TOOLCHAIN_VERSION }}/${TOOLCHAIN_ARCHIVE_NAME}.zip
        unzip ${TOOLCHAIN_ARCHIVE_NAME}.zip
        echo "$PWD/${TOOLCHAIN_ARCHIVE_NAME}/bin" >> $GITHUB_PATH
      if: ${{ matrix.tags == '-musl' && matrix.platform == 'linux'}}
    - run: npm install -g bare-make
    - run: npm install
    - run: bare-make generate --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} ${{ matrix.flags }}
    - run: bare-make build
    - run: bare-make install
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.tags }}
        path: prebuilds/*
  merge:
    needs: prebuild
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: prebuilds
          merge-multiple: true
      - uses: actions/upload-artifact@v4
        with:
          name: prebuilds
          path: prebuilds
